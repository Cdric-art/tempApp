{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cdric_Art\\\\Desktop\\\\React-App\\\\tempApp\\\\temp-app\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nconst scaleNames = {\n  c: 'Celsius',\n  f: 'Fahrenheit'\n};\n\nfunction BoilingVerdict({\n  celsius\n}) {\n  if (celsius >= 100) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 16\n      }\n    }, \"L'eau bout\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert alert-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }\n  }, \"L'eau ne bout pas\");\n}\n\nclass TemperatureInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      temperature: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({\n      temperature: e.target.value\n    });\n  }\n\n  render() {\n    const temperature = this.state.temperature;\n    const name = 'scale' + this.props.scale;\n    const scaleName = scaleNames[this.props.scale];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, \"Temperature (en \", scaleName, \")\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.handleChange,\n      type: \"text\",\n      id: name,\n      value: temperature,\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      temperature: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({\n      temperature: e.target.value\n    });\n  }\n\n  render() {\n    const temperature = this.state.temperature;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TemperatureInput, {\n      scale: \"c\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(TemperatureInput, {\n      scale: \"f\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(BoilingVerdict, {\n      celsius: parseFloat(temperature),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(Calculator, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 18\n  }\n}), document.getElementById('app'));","map":{"version":3,"sources":["C:/Users/Cdric_Art/Desktop/React-App/tempApp/temp-app/src/index.js"],"names":["React","ReactDOM","scaleNames","c","f","BoilingVerdict","celsius","TemperatureInput","Component","constructor","props","state","temperature","handleChange","bind","e","setState","target","value","render","name","scale","scaleName","Calculator","parseFloat","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst scaleNames = {\r\n    c: 'Celsius',\r\n    f: 'Fahrenheit'\r\n}\r\n\r\nfunction BoilingVerdict({celsius}) {\r\n    if (celsius >= 100) {\r\n        return <div className=\"alert alert-success\">L'eau bout</div>\r\n    }\r\n    return <div className=\"alert alert-info\">L'eau ne bout pas</div>\r\n}\r\n\r\nclass TemperatureInput extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            temperature: ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n    handleChange (e) {\r\n        this.setState({\r\n            temperature: e.target.value\r\n        })\r\n    }\r\n\r\n    render () {\r\n        const temperature = this.state.temperature\r\n        const name = 'scale' + this.props.scale\r\n        const scaleName = scaleNames[this.props.scale]\r\n        return (\r\n            <div className=\"form-group\">\r\n                <label htmlFor={ name }>Temperature (en { scaleName })</label>\r\n                <input onChange={ this.handleChange } type=\"text\" id={ name } value={ temperature } className=\"form-control\"/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Calculator extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            temperature: ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n    handleChange (e) {\r\n        this.setState({\r\n            temperature: e.target.value\r\n        })\r\n    }\r\n\r\n    render () {\r\n        const temperature = this.state.temperature\r\n        return (\r\n        <div className=\"mt-5\">\r\n            <TemperatureInput scale=\"c\" />\r\n            <TemperatureInput scale=\"f\" />\r\n            <BoilingVerdict celsius={ parseFloat(temperature) } />\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nReactDOM.render (<Calculator />,\r\n    document.getElementById('app'));"]},"metadata":{},"sourceType":"module"}